$black: #000000;
$white: #ffffff;
$primary_light: #dc1414;
$primary_dark: #dc1414;

$font-family: 'Helvetica', sans-serif;

// =============================================================================
// Медиа запросы
// =============================================================================

// меньше указанной величины (по умолчанию ширина)
@mixin below($width, $orientation: 'width') {
  @media screen and (max-#{$orientation}: $width) {
    @content;
  }
}

// больше указанной величины (по умолчанию ширина)
@mixin above($width, $orientation: 'width') {
  @media screen and (min-#{$orientation}: $width) {
    @content;
  }
}

// между первой и второй величиной (по умолчанию ширина)
@mixin between($minWidth, $maxWidth, $orientation: 'width') {
  @media screen and (min-#{$orientation}: $minWidth) and (max-#{$orientation}: $maxWidth) {
    @content;
  }
}

// =============================================================================
// Функции пересчета значений
// =============================================================================

@function rem($num) {
  $strip-unit: $num / ($num * 0 + 1);
  @return $strip-unit / 16 * 1rem;
}

@function em($num, $root: 16) {
  $strip-unit: $num / ($num * 0 + 1);
  @return $strip-unit / $root * 1em;
}

// =============================================================================
// Сброс стилей
// =============================================================================

@mixin resset(){
  body,div,dl,dt,dd,ul,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,input,textarea,p,blockquote,th,td{
    margin: 0;
    padding: 0;
  }
  table{
    border-collapse: collapse;
    border-spacing: 0;
  }
  fieldset,img,abbr{
    border: 0;
  }
  address,caption,cite,code,dfn,em,strong,th,var{
    font-style: normal;
    font-weight: normal;
  }
  ul li{
    list-style: none;
  }
  caption,th{
    text-align: left;
  }
  h1,h2,h3,h4,h5,h6{
    font-size: 100%;
    font-weight: normal;
  }
  sup{
    vertical-align: text-top;
  }
  sub{
    vertical-align: text-bottom;
  }
  input,textarea,select{
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
  }
  legend{
    color: #000;
  }
  article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section,main{
    display: block;
  }
  img{
    max-width: 100%;
    height: auto;
  }
  a{
    text-decoration: none;
    color: inherit;
  }
  button{
    outline: none;
  }
}

// =============================================================================
// Smart Gread
// =============================================================================

$columns: 24;
$offset: rem(16);
$offset_one_side: ($offset / 2);
$atom: (100% / $columns);

$break_xs: rem(375);
$break_sm: rem(768);
$break_md: rem(992);
$break_lg: rem(1180);


@mixin wrapper(){
  max-width: $break_lg;
  padding-left: rem(16);
  padding-right: rem(16);
  margin: 0 auto;

  @include above($break_sm) {
    padding-left: rem(32);
    padding-right: rem(32);
  }
}

@mixin row-flex(){
  display: flex;
  flex-wrap: wrap;
  margin-left: ($offset_one_side * -1);
  margin-right: ($offset_one_side * -1);
}

@mixin col(){
  box-sizing: border-box;
  margin-left: $offset_one_side;
  margin-right: $offset_one_side;
  word-wrap: break-word;
}

@mixin size($n){
  $value: $atom * $n;
  width: calc(#{$value} - #{$offset});
}

@mixin offset($n){
  $value: $atom * $n;
  margin-left: calc(#{$value} + #{$offset_one_side});
  margin-right: calc(#{$value} + #{$offset_one_side});
}

@mixin offset-left($n){
  $value: $atom * $n;
  margin-left: calc(#{$value} + #{$offset_one_side});
}

@mixin offset-right($n){
  $value: $atom * $n;
  margin-right: calc(#{$value} + #{$offset_one_side});
}

@mixin offset-padding($n){
  $value: $atom * $n;
  padding-left: calc(#{$value} + #{$offset_one_side});
  padding-right: calc(#{$value} + #{$offset_one_side});
}

@mixin offset-left-padding($n){
  $value: $atom * $n;
  padding-left: calc(#{$value} + #{$offset_one_side});
}

@mixin offset-right-padding($n){
  $value: $atom * $n;
  padding-right: calc(#{$value} + #{$offset_one_side});
}

@mixin size-xs($n){
  @include above($break_xs) {
    $value: $atom * $n;
    width: calc(#{$value} - #{$offset});
  }
}

@mixin offset-xs($n){
  @include above($break_xs) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-xs($n){
  @include above($break_xs) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-xs($n){
  @include above($break_xs) {
    $value: $atom * $n;
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-padding-xs($n){
  @include above($break_xs) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-padding-xs($n){
  @include above($break_xs) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-padding-xs($n){
  @include above($break_xs) {
    $value: $atom * $n;
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin size-sm($n){
  @include above($break_sm) {
    $value: $atom * $n;
    width: calc(#{$value} - #{$offset});
  }
}

@mixin offset-sm($n){
  @include above($break_sm) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-sm($n){
  @include above($break_sm) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-sm($n){
  @include above($break_sm) {
    $value: $atom * $n;
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-padding-sm($n){
  @include above($break_sm) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-padding-sm($n){
  @include above($break_sm) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-padding-sm($n){
  @include above($break_xs) {
    $value: $atom * $n;
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin size-md($n){
  @include above($break_md) {
    $value: $atom * $n;
    width: calc(#{$value} - #{$offset});
  }
}

@mixin offset-md($n){
  @include above($break_md) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-md($n){
  @include above($break_md) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-md($n){
  @include above($break_md) {
    $value: $atom * $n;
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-padding-md($n){
  @include above($break_md) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-padding-md($n){
  @include above($break_md) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-padding-md($n){
  @include above($break_md) {
    $value: $atom * $n;
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin size-lg($n){
  @include above($break_lg) {
    $value: $atom * $n;
    width: calc(#{$value} - #{$offset});
  }
}

@mixin offset-lg($n){
  @include above($break_lg) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-lg($n){
  @include above($break_lg) {
    $value: $atom * $n;
    margin-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-lg($n){
  @include above($break_lg) {
    $value: $atom * $n;
    margin-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-padding-lg($n){
  @include above($break_lg) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-left-padding-lg($n){
  @include above($break_lg) {
    $value: $atom * $n;
    padding-left: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin offset-right-padding-lg($n){
  @include above($break_lg) {
    $value: $atom * $n;
    padding-right: calc(#{$value} + #{$offset_one_side});
  }
}

@mixin debug($background, $outline){
  height: 100vh;
  position: fixed;
  width: 100%;

  > div{
    height: inherit;
    @include wrapper();

    > div{
      height: inherit;
      @include row-flex();

      > div{
        @include col();
        @include size(1);
        height: inherit;
        outline: $outline;
        background: $background;
      }
    }
  }
}
